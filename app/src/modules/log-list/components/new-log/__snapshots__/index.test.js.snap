// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`render the log list 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NewLogInput
    actions={
      Object {
        "createLog": [MockFunction],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <input
          className="NewLogInput__Title"
          onChange={[Function]}
          placeholder="You don't know what happened today..."
        />,
        false,
      ],
      "className": "NewLogInput",
      "onBlur": [Function],
      "onFocus": [Function],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "NewLogInput__Title",
          "onChange": [Function],
          "placeholder": "You don't know what happened today...",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      false,
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <input
            className="NewLogInput__Title"
            onChange={[Function]}
            placeholder="You don't know what happened today..."
          />,
          false,
        ],
        "className": "NewLogInput",
        "onBlur": [Function],
        "onFocus": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "NewLogInput__Title",
            "onChange": [Function],
            "placeholder": "You don't know what happened today...",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        false,
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`the textarea should appear when focused 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): ShallowWrapper {
    "length": 1,
    Symbol(enzyme.__root__): [Circular],
    Symbol(enzyme.__unrendered__): <NewLogInput
      actions={
        Object {
          "createLog": [MockFunction],
        }
      }
    />,
    Symbol(enzyme.__renderer__): Object {
      "batchedUpdates": [Function],
      "getNode": [Function],
      "render": [Function],
      "simulateEvent": [Function],
      "unmount": [Function],
    },
    Symbol(enzyme.__node__): Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <input
            className="NewLogInput__Title"
            onChange={[Function]}
            placeholder="You don't know what happened today..."
          />,
          <div>
            <TextareaAutosize
              className="NewLogInput__Content"
              onChange={[Function]}
              onHeightChange={[Function]}
              placeholder="Tell me all about your day..."
              useCacheForDOMMeasurements={false}
              value=""
            />
            <div
              className="flex flex-align-right"
            >
              <button
                className="btn btn-primary btn-sm"
                onClick={[Function]}
              >
                Create
              </button>
            </div>
          </div>,
        ],
        "className": "NewLogInput NewLogInput--focus",
        "onBlur": [Function],
        "onFocus": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "NewLogInput__Title",
            "onChange": [Function],
            "placeholder": "You don't know what happened today...",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <TextareaAutosize
                className="NewLogInput__Content"
                onChange={[Function]}
                onHeightChange={[Function]}
                placeholder="Tell me all about your day..."
                useCacheForDOMMeasurements={false}
                value=""
              />,
              <div
                className="flex flex-align-right"
              >
                <button
                  className="btn btn-primary btn-sm"
                  onClick={[Function]}
                >
                  Create
                </button>
              </div>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "NewLogInput__Content",
                "onChange": [Function],
                "onHeightChange": [Function],
                "placeholder": "Tell me all about your day...",
                "useCacheForDOMMeasurements": false,
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <button
                  className="btn btn-primary btn-sm"
                  onClick={[Function]}
                >
                  Create
                </button>,
                "className": "flex flex-align-right",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Create",
                  "className": "btn btn-primary btn-sm",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "Create",
                "type": "button",
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
    Symbol(enzyme.__nodes__): Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <input
              className="NewLogInput__Title"
              onChange={[Function]}
              placeholder="You don't know what happened today..."
            />,
            <div>
              <TextareaAutosize
                className="NewLogInput__Content"
                onChange={[Function]}
                onHeightChange={[Function]}
                placeholder="Tell me all about your day..."
                useCacheForDOMMeasurements={false}
                value=""
              />
              <div
                className="flex flex-align-right"
              >
                <button
                  className="btn btn-primary btn-sm"
                  onClick={[Function]}
                >
                  Create
                </button>
              </div>
            </div>,
          ],
          "className": "NewLogInput NewLogInput--focus",
          "onBlur": [Function],
          "onFocus": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "NewLogInput__Title",
              "onChange": [Function],
              "placeholder": "You don't know what happened today...",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <TextareaAutosize
                  className="NewLogInput__Content"
                  onChange={[Function]}
                  onHeightChange={[Function]}
                  placeholder="Tell me all about your day..."
                  useCacheForDOMMeasurements={false}
                  value=""
                />,
                <div
                  className="flex flex-align-right"
                >
                  <button
                    className="btn btn-primary btn-sm"
                    onClick={[Function]}
                  >
                    Create
                  </button>
                </div>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "className": "NewLogInput__Content",
                  "onChange": [Function],
                  "onHeightChange": [Function],
                  "placeholder": "Tell me all about your day...",
                  "useCacheForDOMMeasurements": false,
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <button
                    className="btn btn-primary btn-sm"
                    onClick={[Function]}
                  >
                    Create
                  </button>,
                  "className": "flex flex-align-right",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Create",
                    "className": "btn btn-primary btn-sm",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": "Create",
                  "type": "button",
                },
                "type": "div",
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
    ],
    Symbol(enzyme.__options__): Object {
      "adapter": ReactSixteenAdapter {
        "options": Object {
          "enableComponentDidUpdateOnSetState": true,
        },
      },
    },
  },
  Symbol(enzyme.__unrendered__): null,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "className": "NewLogInput__Content",
      "onChange": [Function],
      "onHeightChange": [Function],
      "placeholder": "Tell me all about your day...",
      "useCacheForDOMMeasurements": false,
      "value": "",
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "className": "NewLogInput__Content",
        "onChange": [Function],
        "onHeightChange": [Function],
        "placeholder": "Tell me all about your day...",
        "useCacheForDOMMeasurements": false,
        "value": "",
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
